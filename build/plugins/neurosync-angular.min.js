!function(t){function e(t){Neuro.rest=function(e){return function(e,o,n){function a(t){o(t.data)}function i(t){n(t.data,t.status)}Neuro.debug(Neuro.Events.REST,this,e.method,e.url,e.data),Neuro.forceOffline?n({},0):t(e).then(a,i)}};var e=Neuro.debug;return Neuro.debug=function(){n.debug&&e.apply(this,arguments)},Neuro.Events.ScopeEval=1e5,Neuro.listenToNetworkStatus(),Neuro}function o(t){function e(t,o,n){return this instanceof e?(this.scope=t,this.target=o,this.callback=n,this.notify=this.newNotification(),this.release=this.newRelease(),void this.on()):new e(t,o,n)}return e.prototype={on:function(){this.target.Database&&this.target.Model&&(this.target=this.target.Database),this.target instanceof Neuro.Database?this.target.on("updated",this.notify):this.target instanceof Neuro.Model&&this.target.$on("saved removed remote-update",this.notify),this.scope.$on("$destroy",this.release)},off:function(){this.target instanceof Neuro.Database?this.target.off("updated",this.notify):this.target instanceof Neuro.Model&&this.target.$off("saved removed remote-update",this.notify)},newRelease:function(){var t=this;return function(){t.off()}},newNotification:function(){var t=this;return function(){t.scope.$evalAsync(function(){t.callback&&t.callback.apply(t.target),n.debug&&Neuro.debug("[Scope:$evalAsync]",t.scope)})}}},e}var n={debug:!1};t.constant("NeuroSettings",n).factory("Neuro",["$http",e]).factory("NeuroBind",["$log",o])}(angular.module("neurosync",[]));
//# sourceMappingURL=neurosync-angular.min.js.map
