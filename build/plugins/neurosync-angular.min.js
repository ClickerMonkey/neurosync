!function(t){function e(t){Neuro.rest=function(e){return function(o,n,a,s,i){function r(t){s(t.data)}function u(t){i(t.data,t.status)}var c={method:o,data:a,url:n&&"POST"!==o?e.api+n.$key():e.api};Neuro.debug(Neuro.Events.REST,this,c.method,c.url,c.data),Neuro.forceOffline?i({},0):t(c).then(r,u)}};var e=Neuro.debug;return Neuro.debug=function(){n.debug&&e.apply(this,arguments)},Neuro.Events.ScopeEval=1e5,Neuro.listenToNetworkStatus(),Neuro}function o(t){function e(t,o,n){return this instanceof e?(this.scope=t,this.target=o,this.callback=n,this.notify=this.newNotification(),this.release=this.newRelease(),void this.on()):new e(t,o,n)}return e.Events={Database:"updated",Model:"saved removed remote-update relation-update",Scope:"$destroy"},e.prototype={on:function(){this.target.Database&&this.target.Model&&(this.target=this.target.Database),this.target instanceof Neuro.Database?this.target.on(e.Events.Database,this.notify):this.target instanceof Neuro.Model&&this.target.$on(e.Events.Model,this.notify),this.scope.$on(e.Events.Scope,this.release)},off:function(){this.target instanceof Neuro.Database?this.target.off(e.Events.Database,this.notify):this.target instanceof Neuro.Model&&this.target.$off(e.Events.Model,this.notify)},newRelease:function(){var t=this;return function(){t.off()}},newNotification:function(){var t=this;return function(){t.scope.$evalAsync(function(){t.callback&&t.callback.apply(t.target),n.debug&&Neuro.debug("[Scope:$evalAsync]",t.scope)})}}},e}var n={debug:!1};t.constant("NeuroSettings",n).factory("Neuro",["$http",e]).factory("NeuroBind",["$log",o])}(angular.module("neurosync",[]));
//# sourceMappingURL=neurosync-angular.min.js.map
