{"version":3,"sources":["neurosync-debug.js"],"names":["Neuro","getContext","x","Model","$db","className","toString","Database","Relation","database","type","model","Operation","findContext","that","args","i","length","c","window","console","eventToDescription",0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,"debugExclude","debugInclude","debugNoData","debugWithData","debugTrace","debugStyle","debug","eventType","source","indexOf","Array","prototype","slice","call","arguments","context","description","push","Error","groupCollapsed","log","groupEnd","apply"],"mappings":"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","file":"neurosync-debug.min.js","sourcesContent":["(function(Neuro)\n{\n\n  if ( !window.console ) \n  {\n    return;\n  }\n\n  var eventToDescription = \n  {\n    /* Neuro */\n    0:  'Created',\n    /**/\n    /* REST */\n    1:  'REST',\n    /**/\n    /* Remote Data Processed */\n    2:  'Remote data received, existing model updated',\n    3:  'Remote data received, new model created',\n    /**/\n    /* Loading */\n    4:  'Model remotely removed, removed locally',\n    5:  'Models loaded remotely',\n    6:  'Offline, failed loading models remotely',\n    7:  'Error loading remote models',\n    8:  'Saved model removed locally because it does not exist remotely',\n    9:  'Models loaded locally',\n    10: 'Model deleted locally, resuming remote deletion',\n    11: 'Model loaded but not saved, resuming save',\n    12: 'Model loaded',\n    /**/\n    /* Real-time */\n    13: 'Real-time save',\n    14: 'Real-time removal',\n    /**/\n    /* Save */\n    15: 'Model saved values',\n    16: 'Model save published',\n    17: 'Model save failure, conflicted',\n    18: 'Model update failure, does not exist remotely',\n    19: 'Model save error for',\n    20: 'Model save failure, offline!',\n    21: 'Model save resume',\n    22: 'Models loading remotely resumed',\n    23: 'Model saved locally',\n    24: 'Model failed to save locally, will still try to save it remotely',\n    25: 'Model saved remotely',\n    /**/\n    /* Remove */\n    26: 'Model remove published',\n    27: 'Model removed locally',\n    28: 'Model remove failure, does not exist remotely',\n    29: 'Model remove error',\n    30: 'Model remove failure, offline!',\n    31: 'Model remove resume',\n    32: 'Model removed remotely',\n    33: 'Model removed locally',\n    34: 'Model failed to remove locally, will still try to remove it remotely',\n    /**/\n    /* Network Status */\n    35: 'Application Online',\n    36: 'Application Offline',\n    /**/\n    /* Live */\n    37: 'LIVE',\n    /**/\n    /* Save */\n    38: 'Model local save ineffective, model is deleted',\n    39: 'Model local save blocked, waiting until previous operation finishes',\n    40: 'Model save ineffective, model is deleted',\n    41: 'Model remote save ineffective, model is deleted',\n    42: 'Model remove save blocked, waiting until previous operation finishes',\n    /**/\n    /* Remove */\n    43: 'Model remote remove blocked, waiting until previous operation finishes',\n    44: 'Model local remove blocked, waiting until previous operation finishes',\n    45: 'Model local remove ineffective, no local model to remove',\n    46: 'Model local remove effective, unsaved model removed',\n    /**/\n    /* Save Block */\n    47: 'Model had a pending save that was canceled by remove',\n    48: 'Model update blocked with older revision',\n    /**/\n    /* Has One Relationship */\n    49: 'Model ninja removed',\n    50: 'Model ninja saved',\n    51: 'Initial pulled from model',\n    52: 'Initial value loaded',\n    53: 'Initialized',\n    54: 'Relation cleared',\n    55: 'Relation set',\n    56: 'Pre-save',\n    57: 'Post-remove',\n    58: 'Clear key',\n    59: 'Set key',\n    60: 'Loaded',\n    /**/\n    61: 'Initialized',\n    62: 'Model ninja removed',\n    63: 'Model ninja saved'\n  };\n\n  function getContext(x) \n  {\n    if ( x instanceof Neuro.Model ) \n    {\n      return '[' + x.$db.className + ':' + x.$db.toString( x ) + '] ';\n    }\n    if ( x instanceof Neuro.Database ) \n    {\n      return '[' + x.className + '] ';\n    }\n    if ( x instanceof Neuro.Relation )\n    {\n      return '[' + x.database.className + ':' + x.type + ':' + x.model.Database.className + '] ';\n    }\n    if ( x instanceof Neuro.Operation )\n    { \n      return '[' + x.type + '] ';\n    }\n\n    return false;\n  }\n\n  function findContext(that, args) \n  {\n    for (var i = 0; i < args.length; i++) \n    {\n      var c = getContext( args[i] );\n\n      if ( c !== false ) \n      {\n        return c;\n      }\n    }\n\n    var c = getContext( that );\n\n    if (c !== false) \n    {\n      return c;\n    }\n\n    return '[Neuro] ';\n  }\n\n  Neuro.debugExclude = [];\n\n  Neuro.debugInclude = false;\n\n  Neuro.debugNoData = [];\n\n  Neuro.debugWithData = false;\n\n  Neuro.debugTrace = false;\n\n  Neuro.debugStyle = 'color:blue; font-weight:bold';\n\n  Neuro.debug = function(eventType, source) \n  {\n    if ( Neuro.debugInclude !== false )\n    {\n      if ( Neuro.indexOf( Neuro.debugInclude, eventType ) === false )\n      {\n        return;\n      }\n    }\n    else if ( Neuro.indexOf( Neuro.debugExclude, eventType ) !== false )\n    {\n      return;\n    }\n\n    if ( eventType in eventToDescription ) \n    {\n      var args = Array.prototype.slice.call( arguments, 2 ); \n\n      if ( Neuro.debugWithData !== false )\n      {\n        if ( Neuro.indexOf( Neuro.debugWithData, eventType ) === false )\n        {\n          args = [];\n        }\n      }\n      else if ( Neuro.indexOf( Neuro.debugNoData, eventType ) !== false )\n      {\n        args = [];\n      }\n\n      var context = findContext( source, args );\n      var description = eventToDescription[ eventType ];\n\n      if ( Neuro.debugTrace )\n      {\n        args.push( new Error() );\n      }\n\n      if ( args.length && console.groupCollapsed )\n      {\n        console.groupCollapsed( '%c' + context + description, Neuro.debugStyle );\n        for (var i = 0; i < args.length; i++) {\n          console.log( args[i] );\n        }\n        console.groupEnd();\n      }\n      else\n      {\n        console.log( '%c' + context + description, Neuro.debugStyle );        \n      }\n    }\n    else\n    {\n      if ( arguments.length > 1 && console.groupCollapsed )\n      {\n        console.groupCollapsed( '%c' + arguments[0], Neuro.debugStyle );\n        for (var i = 1; i < arguments.length; i++) {\n          console.log( arguments[ i ] );\n        }\n        console.groupEnd();\n      }\n      else\n      {\n        console.log.apply( console, arguments );\n      }\n    }\n  };\n\n})( Neuro );"],"sourceRoot":"/source/"}